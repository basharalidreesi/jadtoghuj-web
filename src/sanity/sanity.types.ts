/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
	_type: 'sanity.imagePaletteSwatch'
	background?: string
	foreground?: string
	population?: number
	title?: string
}

export type SanityImagePalette = {
	_type: 'sanity.imagePalette'
	darkMuted?: SanityImagePaletteSwatch
	lightVibrant?: SanityImagePaletteSwatch
	darkVibrant?: SanityImagePaletteSwatch
	vibrant?: SanityImagePaletteSwatch
	dominant?: SanityImagePaletteSwatch
	lightMuted?: SanityImagePaletteSwatch
	muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
	_type: 'sanity.imageDimensions'
	height?: number
	width?: number
	aspectRatio?: number
}

export type SanityFileAsset = {
	_id: string
	_type: 'sanity.fileAsset'
	_createdAt: string
	_updatedAt: string
	_rev: string
	originalFilename?: string
	label?: string
	title?: string
	description?: string
	altText?: string
	sha1hash?: string
	extension?: string
	mimeType?: string
	size?: number
	assetId?: string
	uploadId?: string
	path?: string
	url?: string
	source?: SanityAssetSourceData
}

export type Geopoint = {
	_type: 'geopoint'
	lat?: number
	lng?: number
	alt?: number
}

export type SimplePortableText = Array<{
	children?: Array<{
		marks?: Array<string>
		text?: string
		_type: 'span'
		_key: string
	}>
	style?: 'normal'
	listItem?: never
	markDefs?: Array<
		{
			_key: string
		} & Link
	>
	level?: number
	_type: 'block'
	_key: string
}>

export type BodyContent = Array<
	| {
			children?: Array<{
				marks?: Array<string>
				text?: string
				_type: 'span'
				_key: string
			}>
			style?: 'normal'
			listItem?: 'bullet' | 'number'
			markDefs?: Array<
				{
					_key: string
				} & Link
			>
			level?: number
			_type: 'block'
			_key: string
		}
	| {
			internal_unused?: string
			_type: 'allMediaPlaceholder'
			_key: string
		}
	| {
			selectMediaItems?: Array<never>
			_type: 'selectMediaContent'
			_key: string
		}
>

export type ReferenceName = string

export type Padding = number

export type MediaContent = Array<{
	referenceName?: ReferenceName
	_type: 'temp'
	_key: string
}>

export type LookContent = Array<{
	asset?: {
		_ref: string
		_type: 'reference'
		_weak?: boolean
		[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
	}
	hotspot?: SanityImageHotspot
	crop?: SanityImageCrop
	name?: string
	description?: SimplePortableText
	_type: 'look'
	_key: string
}>

export type IsHiddenFromListings = boolean

export type ImageHotspots = Array<
	{
		_key: string
	} & ImageHotspot
>

export type HeadlineStyle = 'var1' | 'var2'

export type HeadlinePlacement =
	| 'above'
	| 'below'
	| 'inside-top'
	| 'inside-bottom'
	| 'inside-vertical'

export type DoesHaveBorder = boolean

export type Colour = string

export type ImageHotspot = {
	_type: 'imageHotspot'
	x?: number
	y?: number
	details?: SimplePortableText
}

export type Link = {
	_type: 'link'
	type?: 'external' | 'internal'
	internalTarget?:
		| {
				_ref: string
				_type: 'reference'
				_weak?: boolean
				[internalGroqTypeReferenceTo]?: 'article'
			}
		| {
				_ref: string
				_type: 'reference'
				_weak?: boolean
				[internalGroqTypeReferenceTo]?: 'category'
			}
		| {
				_ref: string
				_type: 'reference'
				_weak?: boolean
				[internalGroqTypeReferenceTo]?: 'pressItem'
			}
		| {
				_ref: string
				_type: 'reference'
				_weak?: boolean
				[internalGroqTypeReferenceTo]?: 'project'
			}
		| {
				_ref: string
				_type: 'reference'
				_weak?: boolean
				[internalGroqTypeReferenceTo]?: 'homePage'
			}
	externalUrl?: string
}

export type WebsiteGlobals = {
	_id: string
	_type: 'websiteGlobals'
	_createdAt: string
	_updatedAt: string
	_rev: string
	analyticsSnippet?: string
}

export type StudioInformation = {
	_id: string
	_type: 'studioInformation'
	_createdAt: string
	_updatedAt: string
	_rev: string
	name?: string
	logo?: {
		asset?: {
			_ref: string
			_type: 'reference'
			_weak?: boolean
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
		}
		hotspot?: SanityImageHotspot
		crop?: SanityImageCrop
		_type: 'image'
	}
	email?: string
	instagramLink?: string
	shortDescription?: string
	longDescription?: string
}

export type RecommendedItems = {
	_id: string
	_type: 'recommendedItems'
	_createdAt: string
	_updatedAt: string
	_rev: string
	recommendedItems?: Array<
		| {
				_ref: string
				_type: 'reference'
				_weak?: boolean
				[internalGroqTypeReferenceTo]?: 'article'
			}
		| {
				_ref: string
				_type: 'reference'
				_weak?: boolean
				[internalGroqTypeReferenceTo]?: 'pressItem'
			}
		| {
				_ref: string
				_type: 'reference'
				_weak?: boolean
				[internalGroqTypeReferenceTo]?: 'project'
			}
	>
}

export type HomePage = {
	_id: string
	_type: 'homePage'
	_createdAt: string
	_updatedAt: string
	_rev: string
	temp?: string
}

export type Project = {
	_id: string
	_type: 'project'
	_createdAt: string
	_updatedAt: string
	_rev: string
	title?: string
	slug?: {
		current?: string
		source?: string
		_type: 'commonSlug'
	}
	isHiddenFromListings?: IsHiddenFromListings
	date?: string
	summary?: SimplePortableText
	metadata?: Metadata
	client?: string
	category?: {
		_ref: string
		_type: 'reference'
		_weak?: boolean
		[internalGroqTypeReferenceTo]?: 'category'
	}
	lookContent?: LookContent
	mediaContent?: MediaContent
	bodyContent?: BodyContent
}

export type PressItem = {
	_id: string
	_type: 'pressItem'
	_createdAt: string
	_updatedAt: string
	_rev: string
	headline?: string
	url?: string
	isHiddenFromListings?: IsHiddenFromListings
	date?: string
	publisher?: string
	heroImage?: {
		asset?: {
			_ref: string
			_type: 'reference'
			_weak?: boolean
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
		}
		hotspot?: SanityImageHotspot
		crop?: SanityImageCrop
		_type: 'heroImage'
	}
	category?: {
		_ref: string
		_type: 'reference'
		_weak?: boolean
		[internalGroqTypeReferenceTo]?: 'category'
	}
}

export type Article = {
	_id: string
	_type: 'article'
	_createdAt: string
	_updatedAt: string
	_rev: string
	headline?: string
	slug?: {
		current?: string
		source?: string
		_type: 'commonSlug'
	}
	isHiddenFromListings?: IsHiddenFromListings
	date?: string
	summary?: SimplePortableText
	heroImage?: {
		asset?: {
			_ref: string
			_type: 'reference'
			_weak?: boolean
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
		}
		hotspot?: SanityImageHotspot
		crop?: SanityImageCrop
		_type: 'heroImage'
	}
	heroImageCaption?: SimplePortableText
	metadata?: Metadata
	category?: {
		_ref: string
		_type: 'reference'
		_weak?: boolean
		[internalGroqTypeReferenceTo]?: 'category'
	}
	mediaContent?: MediaContent
	bodyContent?: BodyContent
}

export type Category = {
	_id: string
	_type: 'category'
	_createdAt: string
	_updatedAt: string
	_rev: string
	name?: string
	slug?: {
		current?: string
		source?: string
		_type: 'commonSlug'
	}
	metadata?: Metadata
}

export type SanityImageCrop = {
	_type: 'sanity.imageCrop'
	top?: number
	bottom?: number
	left?: number
	right?: number
}

export type SanityImageHotspot = {
	_type: 'sanity.imageHotspot'
	x?: number
	y?: number
	height?: number
	width?: number
}

export type SanityImageAsset = {
	_id: string
	_type: 'sanity.imageAsset'
	_createdAt: string
	_updatedAt: string
	_rev: string
	originalFilename?: string
	label?: string
	title?: string
	description?: string
	altText?: string
	sha1hash?: string
	extension?: string
	mimeType?: string
	size?: number
	assetId?: string
	uploadId?: string
	path?: string
	url?: string
	metadata?: SanityImageMetadata
	source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
	_type: 'sanity.assetSourceData'
	name?: string
	id?: string
	url?: string
}

export type SanityImageMetadata = {
	_type: 'sanity.imageMetadata'
	location?: Geopoint
	dimensions?: SanityImageDimensions
	palette?: SanityImagePalette
	lqip?: string
	blurHash?: string
	hasAlpha?: boolean
	isOpaque?: boolean
}

export type Metadata = {
	_type: 'metadata'
	title?: string
	description?: string
	openGraphImage?: {
		asset?: {
			_ref: string
			_type: 'reference'
			_weak?: boolean
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
		}
		hotspot?: SanityImageHotspot
		crop?: SanityImageCrop
		_type: 'image'
	}
	twitterImage?: {
		asset?: {
			_ref: string
			_type: 'reference'
			_weak?: boolean
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
		}
		hotspot?: SanityImageHotspot
		crop?: SanityImageCrop
		_type: 'image'
	}
}

export type HeroImage = {
	_type: 'heroImage'
	asset?: {
		_ref: string
		_type: 'reference'
		_weak?: boolean
		[internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
	}
	hotspot?: SanityImageHotspot
	crop?: SanityImageCrop
}

export type CommonSlug = Slug

export type MediaTag = {
	_id: string
	_type: 'media.tag'
	_createdAt: string
	_updatedAt: string
	_rev: string
	name?: Slug
}

export type Slug = {
	_type: 'slug'
	current?: string
	source?: string
}

export type AllSanitySchemaTypes =
	| SanityImagePaletteSwatch
	| SanityImagePalette
	| SanityImageDimensions
	| SanityFileAsset
	| Geopoint
	| SimplePortableText
	| BodyContent
	| ReferenceName
	| Padding
	| MediaContent
	| LookContent
	| IsHiddenFromListings
	| ImageHotspots
	| HeadlineStyle
	| HeadlinePlacement
	| DoesHaveBorder
	| Colour
	| ImageHotspot
	| Link
	| WebsiteGlobals
	| StudioInformation
	| RecommendedItems
	| HomePage
	| Project
	| PressItem
	| Article
	| Category
	| SanityImageCrop
	| SanityImageHotspot
	| SanityImageAsset
	| SanityAssetSourceData
	| SanityImageMetadata
	| Metadata
	| HeroImage
	| CommonSlug
	| MediaTag
	| Slug
export declare const internalGroqTypeReferenceTo: unique symbol